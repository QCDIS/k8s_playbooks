- name: Get a list of services
  k8s_info:
    kind: Service
    namespace: "{{ k8s_namespace }}"
  register: k8s_services

# - name: "query node ports cluster names"
#   debug:
#     var: item
#   loop: "{{ k8s_services |  json_query('resources[?spec.type==`NodePort`].spec.ports[*].nodePort') }}"
#   register: node_ports

- copy: content="{{ k8s_services }}" dest=/tmp/{{k8s_namespace}}_k8s_services.json

- shell: jq -r '.resources[] | select (.spec.type=="NodePort") | {name:.metadata.name,ports:{port:.spec.ports[].nodePort,name:.spec.ports[].name}}' /tmp/{{k8s_namespace}}_k8s_services.json > /tmp/node_ports/service_port_{{ k8s_namespace }}.json

- fetch:
    src: /tmp/node_ports/service_port_{{ k8s_namespace }}.json
    dest: /tmp/node_ports/service_port_{{ k8s_namespace }}.json


# - copy:
#     content: "{{ node_ports }}"
#     dest: /tmp/node_ports/{{ k8s_namespace }}.json

# - shell: "tr -d '\n' < /tmp/node_ports/{{ k8s_namespace }}.json > /tmp/node_ports/{{ k8s_namespace }}_clean.json && mv /tmp/node_ports/{{ k8s_namespace }}_clean.json /tmp/node_ports/{{ k8s_namespace }}.json"