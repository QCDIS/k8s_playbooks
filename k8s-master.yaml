
- name: check kubectl
  shell: kubectl get all
  register: kubectl_command_result
  ignore_errors: True

- name: Get the public IP address of the network.
  uri:
    url: https://api.ipify.org?format=json
    method: Get
  changed_when: false
  register: public_ip
  until: public_ip.status == 200
  retries: 6
  delay: 10

- name: disable swap
  become: yes
  shell: swapoff -a
  when: kubectl_command_result.rc != 0

- name: kubeadm reset
  shell: kubeadm reset -f
  become: yes

- systemd:
    state: restarted
    name: docker
  become: yes

- systemd:
    enabled: yes
    name: docker
  become: yes

- systemd:
    state: restarted
    name: kubelet
  become: yes


- systemd:
    enabled: yes
    name: kubelet
  become: yes

- shell: service kubelet restart
  become: yes


- shell: systemctl daemon-reload
  become: yes


- shell: systemctl restart docker
  become: yes

- shell: systemctl restart kubelet
  become: yes

- name: kubeadm init
  shell: kubeadm init --ignore-preflight-errors=NumCPU --apiserver-cert-extra-sans="{{ public_ip.json.ip }}"
  become: yes
  when: kubectl_command_result.rc != 0


- name: Create directory .kube
  file:
    path: $HOME/.kube
    state: directory
    recurse: yes
  when: kubectl_command_result.rc != 0

- name: copy admin.conf
  become: yes
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_ssh_user }}/.kube/config"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    remote_src: True
  when: kubectl_command_result.rc != 0


- name: set bridge
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present
  become: yes
  when: kubectl_command_result.rc != 0


- name: kubeadm set weave
  shell: export kubever=$(kubectl version | base64 | tr -d '\n') && kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"
  when: kubectl_command_result.rc != 0

- name: kubectl taint nodes
  shell: kubectl taint nodes --all node-role.kubernetes.io/master-
  when: kubectl_command_result.rc != 0

- shell: iptables -D  INPUT -j REJECT --reject-with icmp-host-prohibited
  become: yes
  ignore_errors: yes


- shell: iptables -D  FORWARD -j REJECT --reject-with icmp-host-prohibited
  become: yes
  ignore_errors: yes
  when: kubectl_command_result.rc != 0