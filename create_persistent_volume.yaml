---
- hosts: all
  gather_facts: no
  become: yes
  tasks:

    - file:
        path: "{{ local_path }}"
        state: directory
        
    - shell: mount -t tmpfs k8_pv "{{ local_path }}"

#    - name: Mount tmpfs
#      mount:
#        path: "{{ local_path }}"
#        src: k8_pv
#        fstype: tmpfs
#        state: present


- hosts: master
  gather_facts: no
  tasks:

    - get_url:
        url: https://raw.githubusercontent.com/QCDIS/k8s_playbooks/master/persistent_volume/local/local_storage-class.yaml
        dest: /tmp/local_storage-class.yaml


    - k8s:
        state: present
        src: /tmp/local_storage-class.yaml

    - shell: kubectl get nodes -o=jsonpath='{.items[*].metadata}' | jq .name | jq -s '{node_names:.}' > /tmp/node_names.yaml


    - fetch:
        src: /tmp/node_names.yaml
        dest: /tmp/node_names.yaml
        flat: yes

    - include_vars:
        file: /tmp/node_names.yaml
        name: node_names

    - set_fact:
        pv:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: local-pv
          spec:
            capacity:
              storage: "{{ storage_capacity }}"
            accessModes:
              - ReadWriteOnce
            persistentVolumeReclaimPolicy: Retain
            storageClassName: local-storage
            local:
              path: "{{ local_path }}"
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values: "{{ node_names['node_names'] }}"
    - debug:
        var: pv

#
#    - copy:
#        content: "{{ pv }}"
#        dest: /tmp/pv.yaml
#
#
#    - k8s:
#        state: present
#        src: /tmp/pv.yaml
#
#    - shell: kubectl get pv -o="jsonpath={}"
#      register: pv_output

