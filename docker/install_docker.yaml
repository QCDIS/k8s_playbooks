- name: Wait for automatic system updates
  shell: while fuser /var/lib/dpkg/{{ item }} >/dev/null 2>&1; do sleep 3; done;
  with_items:
    - lock
    - lock-frontend
  become: yes

- name: Check that extra mount exists
  stat:
    path: /dev/xvdh
  register: mount_volume

- name: Check that extra mount exists
  stat:
    path: /dev/sdc
  register: mount_volume

- name: Update
  apt:
    update_cache: yes
  register: update_result
  ignore_errors: True
  become: yes

- name: Update from shell
  shell: apt update
  when: update_result.failed == True
  become: yes

- package:
    name: 
    - docker
    - docker-engine
    - docker.io
    - containerd
    - runc
    state: absent
  become: yes

- name: Update
  apt:
    update_cache: yes
  become: yes


- name: remove old
  apt:
    pkg:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    state: present
  become: yes    

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: yes

- name: Update
  apt:
#     upgrade: yes
    update_cache: yes
#     autoremove: yes
  become: yes

- shell: "echo $(lsb_release -cs)"
  register: dist

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu "{{ dist.stdout }}" stable
    state: present
  become: yes

- name: Update and upgrade
  apt:
    update_cache: yes
  become: yes

- shell: "dpkg --configure -a"
  become: yes

- package:
    name: 
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - jq 
    state: present
  become: yes

- name: copy "{{ playbook_dir }}/docker/daemon.json"
  copy:
    src: "{{ playbook_dir }}/docker/daemon.json"
    dest: /etc/docker/daemon.json  
    
- name: copy "{{ playbook_dir }}/docker/daemon_data.json"
  copy:
    src: "{{ playbook_dir }}/docker/daemon_data.json"
    dest: /tmp/daemon_data.json
  
- shell: jq -s '.[0] * .[1]' /tmp/daemon_data.json /etc/docker/daemon.json > /tmp/daemon2.json    
  when: mount_volume.stat.exists == True
    
- command: mv /tmp/daemon2.json /etc/docker/daemon.json  
  when: mount_volume.stat.exists == True
  
  

- name: Restart service docker, in all cases
  service:
    name: docker
    state: restarted
  ignore_errors: yes
  become: yes
