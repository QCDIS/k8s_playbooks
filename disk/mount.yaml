- name: Check that the /dev/xvdh exists
  stat:
    path: /dev/xvdh
  register: xvdh_volume

- set_fact:
    dev_path: /dev/xvdh
  when: xvdh_volume.stat.exists == True

- shell: lshw -json -class disk > out.json
  become: yes
  when: xvdh_volume.stat.exists == False

- file:
    path: out.json
    mode: '777'
  become: yes
  when: xvdh_volume.stat.exists == False


- shell: cat out.json | jq -r 'select(.capabilities==null) | .logicalname'
  register: jq_output
  become: yes
  when: xvdh_volume.stat.exists == False

- debug:
    var: jq_output.stdout

- set_fact:
    dev_path: "{{ jq_output.stdout }}"
  when: xvdh_volume.stat.exists == False

- debug:
    var: dev_path


- name: Check that the "{{ dev_path }}" exists
  stat:
    path: "{{ dev_path }}"
  register: mount_volume


- debug:
    var: mount_volume

- name: Create a xfs
  filesystem:
    fstype: xfs
    dev: "{{ dev_path }}"
  when: mount_volume.stat.exists == True



- name: Creates directory
  file:
    path: /data
    state: directory
  when: mount_volume.stat.exists == True

- name: Mount 
  mount:
    path: /data
    src: "{{ dev_path }}"
    state: present
    fstype: xfs
  when: mount_volume.stat.exists == True

- name: check Mount 
  command: mountpoint -q /data
  register: volume_stat
  failed_when: False
  changed_when: False


- debug:
    msg: volume_stat.rc {{ volume_stat.rc }}
  when: mount_volume.stat.exists

- name: Mount manualy
  shell: 'mount "{{ dev_path }}" /data'
  when: mount_volume.stat.exists        
  ignore_errors: yes      
