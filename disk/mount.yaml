- shell: lshw -json -class disk > out.json
  become: yes

- shell: jq -r 'select(.capabilities==null) | .logicalname ' out.json
  register: dev_path

- debug:
    var: dev_path.stdout

- name: Check that the "{{ dev_path }}" exists
  stat:
    path: "{{ dev_path.stdout }}"
  register: mount_volume


- name: Create a xfs
  filesystem:
    fstype: xfs
    dev: "{{ dev_path.stdout }}"
  when: mount_volume.stat.exists == True


- name: Creates directory
  file:
    path: /data
    state: directory
  when: mount_volume.stat.exists == True         

- name: Mount 
  mount:
    path: /data
    src: "{{ dev_path.stdout }}"
    state: present
    fstype: xfs
  when: mount_volume.stat.exists == True    

- name: check Mount 
  command: mountpoint -q /data
  register: volume_stat
  failed_when: False
  changed_when: False


- debug:
    msg: volume_stat.rc {{ volume_stat.rc }} 
  when: mount_volume.stat.exists        

- name: Mount manualy
  shell: 'mount "{{ dev_path.stdout }}" /data'
  when: mount_volume.stat.exists        
  ignore_errors: yes      
