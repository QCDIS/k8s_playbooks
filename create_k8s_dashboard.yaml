---       
- hosts: master
  gather_facts: no
  vars:
    k8s_state: present
    k8s_namespace: kubernetes-dashboard
    k8s_dashboard_installed: lookup('env', 'k8s_dashboard_installed') 
  tasks:   

    - pip:
        name:
            - openshift==0.11.0
            - kubernetes==11.0.0
            
            
    - name: Download k8s_dashboard.yaml
      get_url:
        url: https://raw.githubusercontent.com/QCDIS/playbooks/master/k8s/k8s_dashboard.yaml
        dest: /tmp/k8s_dashboard.yaml         



    - shell: kubectl delete ns kubernetes-dashboard
      ignore_errors: yes

    - name: Create k8s_dashboard
      k8s:
        state: "{{k8s_state}}"
        src: /tmp/k8s_dashboard.yaml

    - name: create clusterrolebinding
      shell: kubectl delete clusterrolebinding serviceaccounts-cluster-admin 
      ignore_errors: yes

    - name: create clusterrolebinding
      shell: kubectl create clusterrolebinding serviceaccounts-cluster-admin --clusterrole=cluster-admin --group=system:serviceaccounts

#     - name: Get a list of secrets in default ns
#       k8s_info:
#         kind: secret
#         namespace: default
#       register: k8s_secrets
      
#     - name: print k8s_secrets
#       debug:
#         var: k8s_secrets      
      
    - name: get k8s_dashboard_token
      shell: kubectl describe secret $(kubectl get secret | grep admin-user | awk '{print $1}') | tail -1
      register: k8s_dashboard_token
      until: k8s_dashboard_token.stdout.find("token") != -1
      retries: 10
      delay: 1
  
    - name: print k8s_dashboard_token
      debug:
        var: k8s_dashboard_token
      environment:
        k8s_dashboard_installed: True
        
        
    - name: Get a list of services
      k8s_info:
        kind: Service
        namespace: "{{ k8s_namespace }}"
      register: k8s_services
      
    - name: print k8s_secrets
      debug:
        var: k8s_services              
